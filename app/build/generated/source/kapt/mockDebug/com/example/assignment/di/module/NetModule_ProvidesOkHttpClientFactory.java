// Generated by Dagger (https://google.github.io/dagger).
package com.example.assignment.di.module;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class NetModule_ProvidesOkHttpClientFactory implements Factory<OkHttpClient> {
  private final NetModule module;

  private final Provider<Context> contextProvider;

  public NetModule_ProvidesOkHttpClientFactory(NetModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return providesOkHttpClient(module, contextProvider.get());
  }

  public static NetModule_ProvidesOkHttpClientFactory create(NetModule module,
      Provider<Context> contextProvider) {
    return new NetModule_ProvidesOkHttpClientFactory(module, contextProvider);
  }

  public static OkHttpClient providesOkHttpClient(NetModule instance, Context context) {
    return Preconditions.checkNotNull(instance.providesOkHttpClient(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
