// Generated by Dagger (https://google.github.io/dagger).
package com.example.assignment.viewmodel;

import com.example.assignment.repository.AppRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AppViewModel_Factory implements Factory<AppViewModel> {
  private final Provider<AppRepository> appRepoProvider;

  public AppViewModel_Factory(Provider<AppRepository> appRepoProvider) {
    this.appRepoProvider = appRepoProvider;
  }

  @Override
  public AppViewModel get() {
    return new AppViewModel(appRepoProvider.get());
  }

  public static AppViewModel_Factory create(Provider<AppRepository> appRepoProvider) {
    return new AppViewModel_Factory(appRepoProvider);
  }

  public static AppViewModel newInstance(AppRepository appRepo) {
    return new AppViewModel(appRepo);
  }
}
